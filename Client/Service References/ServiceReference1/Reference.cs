//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDepartmentService")]
    public interface IDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDeptInfo", ReplyAction="http://tempuri.org/IDepartmentService/GetDeptInfoResponse")]
        Client.ServiceReference1.DepartmentInfo GetDeptInfo(Client.ServiceReference1.DepartmentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDeptInfo", ReplyAction="http://tempuri.org/IDepartmentService/GetDeptInfoResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.DepartmentInfo> GetDeptInfoAsync(Client.ServiceReference1.DepartmentRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DepartmentRequestObject", WrapperNamespace="http://MyCompany.Com/Department", IsWrapped=true)]
    public partial class DepartmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://MyCompany.Com/Department")]
        public string LicenseKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.Com/Department", Order=0)]
        public string DepartmentName;
        
        public DepartmentRequest() {
        }
        
        public DepartmentRequest(string LicenseKey, string DepartmentName) {
            this.LicenseKey = LicenseKey;
            this.DepartmentName = DepartmentName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeptartmentInfoObject", WrapperNamespace="http://MyCompany.Com/Department", IsWrapped=true)]
    public partial class DepartmentInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=0)]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=2)]
        public string Gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=3)]
        public System.DateTime DOB;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=4)]
        public int Vacation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=5)]
        public int sickLeave;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/Department", Order=6)]
        public string jobTitle;
        
        public DepartmentInfo() {
        }
        
        public DepartmentInfo(int ID, string Name, string Gender, System.DateTime DOB, int Vacation, int sickLeave, string jobTitle) {
            this.ID = ID;
            this.Name = Name;
            this.Gender = Gender;
            this.DOB = DOB;
            this.Vacation = Vacation;
            this.sickLeave = sickLeave;
            this.jobTitle = jobTitle;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceChannel : Client.ServiceReference1.IDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IDepartmentService>, Client.ServiceReference1.IDepartmentService {
        
        public DepartmentServiceClient() {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.ServiceReference1.DepartmentInfo Client.ServiceReference1.IDepartmentService.GetDeptInfo(Client.ServiceReference1.DepartmentRequest request) {
            return base.Channel.GetDeptInfo(request);
        }
        
        public int GetDeptInfo(string LicenseKey, string DepartmentName, out string Name, out string Gender, out System.DateTime DOB, out int Vacation, out int sickLeave, out string jobTitle) {
            Client.ServiceReference1.DepartmentRequest inValue = new Client.ServiceReference1.DepartmentRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.DepartmentName = DepartmentName;
            Client.ServiceReference1.DepartmentInfo retVal = ((Client.ServiceReference1.IDepartmentService)(this)).GetDeptInfo(inValue);
            Name = retVal.Name;
            Gender = retVal.Gender;
            DOB = retVal.DOB;
            Vacation = retVal.Vacation;
            sickLeave = retVal.sickLeave;
            jobTitle = retVal.jobTitle;
            return retVal.ID;
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.DepartmentInfo> GetDeptInfoAsync(Client.ServiceReference1.DepartmentRequest request) {
            return base.Channel.GetDeptInfoAsync(request);
        }
    }
}
